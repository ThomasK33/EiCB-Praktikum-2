<mavlc.test__wrapper.ASTTestWrapper>
  <srcLine>-1</srcLine>
  <srcColumn>-1</srcColumn>
  <AST>
    <srcLine>1</srcLine>
    <srcColumn>0</srcColumn>
    <function>
      <srcLine>1</srcLine>
      <srcColumn>0</srcColumn>
      <name>main</name>
      <returnType class="voidType"/>
      <parameters/>
      <functionBody>
        <valDef>
          <srcLine>2</srcLine>
          <srcColumn>4</srcColumn>
          <type class="intType"/>
          <name>a</name>
          <value class="intVal">
            <srcLine>2</srcLine>
            <srcColumn>16</srcColumn>
            <val>3</val>
          </value>
        </valDef>
        <valDef>
          <srcLine>3</srcLine>
          <srcColumn>4</srcColumn>
          <type class="intType" reference="../../valDef/type"/>
          <name>b</name>
          <value class="intVal">
            <srcLine>3</srcLine>
            <srcColumn>16</srcColumn>
            <val>4</val>
          </value>
        </valDef>
        <valDef>
          <srcLine>4</srcLine>
          <srcColumn>4</srcColumn>
          <type class="intType" reference="../../valDef/type"/>
          <name>c</name>
          <value class="intVal">
            <srcLine>4</srcLine>
            <srcColumn>16</srcColumn>
            <val>5</val>
          </value>
        </valDef>
        <valDef>
          <srcLine>6</srcLine>
          <srcColumn>4</srcColumn>
          <type class="intType" reference="../../valDef/type"/>
          <name>x</name>
          <value class="subtraction">
            <srcLine>6</srcLine>
            <srcColumn>16</srcColumn>
            <type class="intType" reference="../../../valDef/type"/>
            <leftOp class="addition">
              <srcLine>6</srcLine>
              <srcColumn>16</srcColumn>
              <type class="intType" reference="../../../../valDef/type"/>
              <leftOp class="multiplication">
                <srcLine>6</srcLine>
                <srcColumn>16</srcColumn>
                <type class="intType" reference="../../../../../valDef/type"/>
                <leftOp class="idRef">
                  <srcLine>6</srcLine>
                  <srcColumn>16</srcColumn>
                  <type class="intType" reference="../../../../../../valDef/type"/>
                  <declaration class="valDef" reference="../../../../../../valDef"/>
                  <idName>a</idName>
                </leftOp>
                <rightOp class="idRef">
                  <srcLine>6</srcLine>
                  <srcColumn>20</srcColumn>
                  <type class="intType" reference="../../../../../../valDef/type"/>
                  <declaration class="valDef" reference="../../../../../../valDef[2]"/>
                  <idName>b</idName>
                </rightOp>
              </leftOp>
              <rightOp class="idRef">
                <srcLine>6</srcLine>
                <srcColumn>24</srcColumn>
                <type class="intType" reference="../../../../../valDef/type"/>
                <declaration class="valDef" reference="../../../../../valDef[3]"/>
                <idName>c</idName>
              </rightOp>
            </leftOp>
            <rightOp class="idRef">
              <srcLine>6</srcLine>
              <srcColumn>28</srcColumn>
              <type class="intType" reference="../../../../valDef/type"/>
              <declaration class="valDef" reference="../../../../valDef"/>
              <idName>a</idName>
            </rightOp>
          </value>
        </valDef>
      </functionBody>
    </function>
  </AST>
  <testFile>subaddmul01.mavl</testFile>
  <onlySyntax>false</onlySyntax>
</mavlc.test__wrapper.ASTTestWrapper>